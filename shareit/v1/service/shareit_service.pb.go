// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shareit/v1/service/shareit_service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_3022ae706155c48c, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type TestString struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestString) Reset()         { *m = TestString{} }
func (m *TestString) String() string { return proto.CompactTextString(m) }
func (*TestString) ProtoMessage()    {}
func (*TestString) Descriptor() ([]byte, []int) {
	return fileDescriptor_3022ae706155c48c, []int{1}
}

func (m *TestString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestString.Unmarshal(m, b)
}
func (m *TestString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestString.Marshal(b, m, deterministic)
}
func (m *TestString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestString.Merge(m, src)
}
func (m *TestString) XXX_Size() int {
	return xxx_messageInfo_TestString.Size(m)
}
func (m *TestString) XXX_DiscardUnknown() {
	xxx_messageInfo_TestString.DiscardUnknown(m)
}

var xxx_messageInfo_TestString proto.InternalMessageInfo

func (m *TestString) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "shareit.service.Empty")
	proto.RegisterType((*TestString)(nil), "shareit.service.TestString")
}

func init() {
	proto.RegisterFile("shareit/v1/service/shareit_service.proto", fileDescriptor_3022ae706155c48c)
}

var fileDescriptor_3022ae706155c48c = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x28, 0xce, 0x48, 0x2c,
	0x4a, 0xcd, 0x2c, 0xd1, 0x2f, 0x33, 0xd4, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x87,
	0x0a, 0xc5, 0x43, 0xf9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xfc, 0x50, 0x61, 0x3d, 0xa8,
	0xb0, 0x12, 0x3b, 0x17, 0xab, 0x6b, 0x6e, 0x41, 0x49, 0xa5, 0x92, 0x12, 0x17, 0x57, 0x48, 0x6a,
	0x71, 0x49, 0x70, 0x49, 0x51, 0x66, 0x5e, 0xba, 0x90, 0x08, 0x17, 0x6b, 0x49, 0x66, 0x49, 0x4e,
	0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0x63, 0xe4, 0xcb, 0xc5, 0x17, 0x0c, 0xd2,
	0xef, 0x59, 0x12, 0x0c, 0xd1, 0x2e, 0x64, 0xcd, 0xc5, 0x02, 0xd2, 0x25, 0x24, 0xa6, 0x87, 0x66,
	0xb0, 0x1e, 0xd8, 0x54, 0x29, 0x69, 0x0c, 0x71, 0x84, 0x25, 0x4e, 0xdc, 0x51, 0x9c, 0x7a, 0xd6,
	0x50, 0xf1, 0x24, 0x36, 0xb0, 0x03, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x62, 0x14,
	0x92, 0xcc, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShareItServiceClient is the client API for ShareItService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShareItServiceClient interface {
	Test(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TestString, error)
}

type shareItServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShareItServiceClient(cc grpc.ClientConnInterface) ShareItServiceClient {
	return &shareItServiceClient{cc}
}

func (c *shareItServiceClient) Test(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TestString, error) {
	out := new(TestString)
	err := c.cc.Invoke(ctx, "/shareit.service.ShareItService/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShareItServiceServer is the server API for ShareItService service.
type ShareItServiceServer interface {
	Test(context.Context, *Empty) (*TestString, error)
}

// UnimplementedShareItServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShareItServiceServer struct {
}

func (*UnimplementedShareItServiceServer) Test(ctx context.Context, req *Empty) (*TestString, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}

func RegisterShareItServiceServer(s *grpc.Server, srv ShareItServiceServer) {
	s.RegisterService(&_ShareItService_serviceDesc, srv)
}

func _ShareItService_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareItServiceServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shareit.service.ShareItService/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareItServiceServer).Test(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShareItService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shareit.service.ShareItService",
	HandlerType: (*ShareItServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Test",
			Handler:    _ShareItService_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shareit/v1/service/shareit_service.proto",
}
